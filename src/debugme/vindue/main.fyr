import . from "<GLFW/glfw3.h>" {
    type GLFWmonitor opaque
    type GLFWwindow opaque
    type GLFWimage opaque

//    type GLFWframebuffersizefun func(window #Window, int width, int height)

    func glfwInit() int
    func glfwTerminate()
    func glfwCreateWindow(width int, height int, title string, monitor #GLFWmonitor, share #GLFWwindow) #GLFWwindow
    func glfwDestroyWindow(window #GLFWwindow)
    func glfwWindowShouldClose(window #GLFWwindow) int
    func glfwSetWindowShouldClose(window #GLFWwindow, value int)
    func glfwFocusWindow(window #GLFWwindow)
    func glfwHideWindow(window #GLFWwindow)
    func glfwShowWindow(window #GLFWwindow)
    func glfwMaximizeWindow(window #GLFWwindow)
    func glfwIconifyWindow(window #GLFWwindow)
    func glfwRestoreWindow(window #GLFWwindow)
    func glfwGetFramebufferSize(window #GLFWwindow, width &int, height &int)
    func glfwGetWindowAttrib(window #GLFWwindow, attrib int) int
    func glfwGetWindowFrameSize(window #GLFWwindow, left &int, top &int, right &int, bottom &int)
    func glfwGetWindowMonitor(window #GLFWwindow) #GLFWmonitor 
    func glfwGetWindowPos(window #GLFWwindow, xpos &int, ypos &int)
    func glfwGetWindowSize(window #GLFWwindow, width &int, height &int)
    func glfwSetWindowPos(window #GLFWwindow, xpos int, ypos int)
    func glfwSetWindowSize(window #GLFWwindow, width int, height int)
    func glfwSetWindowSizeLimits(window #GLFWwindow, minwidth int, minheight int, maxwidth int, maxheight int)
    func glfwGetWindowUserPointer(window #GLFWwindow) #void
    func glfwSetWindowUserPointer(window #GLFWwindow, pointer #void)
    func glfwSetWindowAspectRatio(window #GLFWwindow, numer int, denom int)
    func glfwSetWindowIcon(window #GLFWwindow, count int, images #GLFWimage)
    func glfwSetWindowMonitor(window #GLFWwindow, monitor #GLFWmonitor, xpos int, ypos int, width int, height int, refreshRate int)
    func glfwSetWindowTitle(window #GLFWwindow, title string)
    func glfwSwapBuffers(window #GLFWwindow)
    func glfwPollEvents()
    func glfwPostEmptyEvent()
    func glfwWaitEvents()
    func glfwWaitEventsTimeout(timeout double)
    func glfwWindowHint(hint int, value int)
    func glfwDefaultWindowHints()

//    func glfwSetFramebufferSizeCallback(window #GLFWwindow, cbfun #GLFWframebuffersizefun) #GLFWframebuffersizefun

//    const GLFW_TRUE int
//    const GLFW_FALSE int
//    const GLFW_DONT_CARE int

//    const GLFW_RESIZABLE int
//    const GLFW_VISIBLE int
    
//    type Hint GLFW_RESIZABLE | GLFW_VISIBLE
} 

build {
    compile: []
    link: ["-lglfw"]
}

export func main() int {
    if (glfwInit() == 0) {
        println("GLFW error init")
        return 2
    }
    let window = glfwCreateWindow(640, 480, "Fyr", null, null)
    if (window == null) {
        // Window or OpenGL context creation failed
        println("No window")
        return 3
    }
    for (glfwWindowShouldClose(window) == 0) {
        println("Eventloop")
        glfwWaitEvents()
    }
    glfwDestroyWindow(window)
    glfwTerminate();
    println("Bye from glfw")
    return 0
}

// TODO:  glfwSetFramebufferSizeCallback 
// TODO: glfwSetWindowCloseCallback
// TODO: glfwSetWindowFocusCallback
// TODO: glfwSetWindowIconifyCallback 	
// TODO:  glfwSetWindowPosCallback
// TODO: glfwSetWindowRefreshCallback
// TODO: glfwSetWindowSizeCallback

//export {
//    func glfwInit as Init
//    func glfwTerminate as Terminate
//    func glfwCreateWindow as CreateWindow
//    func glfwDestroyWindow as DestroyWindow
//    type GLFWmonitor as Monitor
//    type GLFWwindow as Window
//}