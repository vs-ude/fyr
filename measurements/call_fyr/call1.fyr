// Current fyr time: 1.5 sec
// Go time: <0.4 sec
// JS time: <0.4 sec
// Passing p via the heap stack instead of the wasm stack costs 0.5 secs, because of stack building
// One null-check less results in an additional 0.1 secs less
// Inlinig `doit` saves 0.5 secs
// Removing the second null check after inlining 0.1 secs less
// All optimizations together result in a time of <0.4 sec

type Point struct {
    a int
    b int
}

func doit(ptr &Point) int {
    return ptr.a + ptr.b
}

export func main() int {
    var p Point = {a:1, b:2}
    var r = 0
    for(var i = 0; i < 320000000; i++) {
        r += doit(&p)
    }
    return r
}