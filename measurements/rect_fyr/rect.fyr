import . {
    func logString(string)
    func logFloat(double)
    func logNumber(uint)
} from "imports"

type Rect struct {
	pos  Point
	size Size
}

type Point struct {
	x int
	y int
}

type Size struct {
    width int
    height int
}

func &Rect.include(p Point) Rect {
	var result = *this
	if (p.x < this.pos.x) {
		result.size.width = this.size.width + this.pos.x - p.x
		result.pos.x = p.x
	} else if (p.x >= this.pos.x+this.size.width) {
		result.size.width = p.x - this.pos.x + 1
	}
	if (p.y < this.pos.y) {
		result.size.height = this.size.height + this.pos.y - p.y
		result.pos.y = p.y
	} else if (p.y >= this.pos.y+this.size.height) {
		result.size.height = p.y - this.pos.y + 1
	}
	return result
}

export func main() {
	var r Rect
	r.pos.x = 12
	r.pos.y = 23
	r.size.width = 2
	r.size.height = 3
	for (var i = 0; i < 320000000; i++) {
		r = r.include({x: i % 100, y: i % 200})
	}
	logNumber(<uint>r.pos.x)
    logNumber(<uint>r.pos.y)
    logNumber(<uint>r.size.width)
    logNumber(<uint>r.size.height)
}
