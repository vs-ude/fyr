type List struct {
    next *List
    value int
}

export func main() int {
    var list *List = {value: 42}
    var arr [2]List = [{}, {}]
    var tuple (List, List) = ({}, {})
    var arr2 [2]List = [{value:23, next: {}}, {}]
    var ref ~List = list
    var ref2 ~List
    ref2 = list
    var slice []List = [{}, {}]
    var refSlice ~[]List = slice
    arr[1].value = getValue(list)
    var arr3 [2]*List = [{value: 3}, {value: 5}]
    var ref3 ~List
    var ref4 ~List
    var tuple2 (*List, *List) = ({}, {})
    ref3, ref4 = take(tuple2)
    var val1 List
    var val2 List
    val1, val2 = take(tuple)
    var counter = 0
    return list.value + slice.len() + slice.cap()
}

func getValue(list &List) int {
    return list.value
}