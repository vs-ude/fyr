type Point struct {
    x int
    y int
}

type SliceStruct struct {
    p *Point
}

type Link struct {
    next *Link
    value *Point
    parallel ^Link
    pos Point
    sibling &Link
}

type PointRef struct {
    ptr *PointRef
    ref &PointRef
    unique ^PointRef
    pos Point
}

func funcTest(param1 *Link) *Link {
    var funky *Link = {}
    var r = doIt(funky, param1)
    return r
}

func funcTest2() {
    var l *Link = {}
    // Must err
//    doIt(l, l)
    doIt(l, {})
}

func doIt(l1 *Link, l2 *Link) ^Link {
    // Must err
//    return l1
    var v1 *Link
    var v2 ^Link
    v1, v2 = tupleMe()
    // Must err
//    return v1
    return v2
//    var v3 ^Link = doIt(null, null)
//    return v3
}

func tupleMe() (*Link, ^Link) {
    return {}, {}
}